[{"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/index.js":"1","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/reportWebVitals.js":"2","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/App.js":"3","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/DBHome.js":"4","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/MainDashboard.js":"5","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/GlobalHR.js":"6","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/DirectorsDashboard.js":"7","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/AdminLoginForm.js":"8","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/LoginForm.js":"9","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/FileUploadForm.js":"10","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/Spinner.jsx":"11","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/HomeNavbar.js":"12","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/DashNavbar.js":"13","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/Card.js":"14","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/Modal.js":"15","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/ContactForm.js":"16","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/UpdateContactForm.js":"17","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/SearchNotFound.js":"18","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/DeleteContactForm.js":"19","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/features/contacts/ContactServices.js":"20","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/features/users/UserServices.js":"21","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/FAQ.js":"22","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/HRPitch.js":"23"},{"size":769,"mtime":1698057104883,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1698057104885,"results":"26","hashOfConfig":"25"},{"size":1531,"mtime":1698523011327,"results":"27","hashOfConfig":"25"},{"size":189,"mtime":1698057104887,"results":"28","hashOfConfig":"25"},{"size":15567,"mtime":1698078177685,"results":"29","hashOfConfig":"25"},{"size":12863,"mtime":1699509261561,"results":"30","hashOfConfig":"25"},{"size":16209,"mtime":1698522163002,"results":"31","hashOfConfig":"25"},{"size":3568,"mtime":1698057104862,"results":"32","hashOfConfig":"25"},{"size":4765,"mtime":1698057104869,"results":"33","hashOfConfig":"25"},{"size":2420,"mtime":1699515135751,"results":"34","hashOfConfig":"25"},{"size":1485,"mtime":1698057104872,"results":"35","hashOfConfig":"25"},{"size":3321,"mtime":1699513758778,"results":"36","hashOfConfig":"25"},{"size":4657,"mtime":1699514139006,"results":"37","hashOfConfig":"25"},{"size":519,"mtime":1698057104863,"results":"38","hashOfConfig":"25"},{"size":765,"mtime":1698076695007,"results":"39","hashOfConfig":"25"},{"size":7755,"mtime":1698057104864,"results":"40","hashOfConfig":"25"},{"size":11854,"mtime":1699513880981,"results":"41","hashOfConfig":"25"},{"size":683,"mtime":1698057104871,"results":"42","hashOfConfig":"25"},{"size":3365,"mtime":1698079257070,"results":"43","hashOfConfig":"25"},{"size":2925,"mtime":1699514575438,"results":"44","hashOfConfig":"25"},{"size":2172,"mtime":1698057104878,"results":"45","hashOfConfig":"25"},{"size":13406,"mtime":1699511204945,"results":"46","hashOfConfig":"25"},{"size":12235,"mtime":1699511299483,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"120hijy",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"51"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/index.js",[],[],["123"],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/reportWebVitals.js",[],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/App.js",["124"],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/DBHome.js",[],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/MainDashboard.js",["125","126","127","128","129","130","131"],[],"import React, { Fragment, useState,useEffect } from 'react'\nimport{useQuery, useQueryClient} from '@tanstack/react-query'\nimport { useNavigate } from \"react-router-dom\"\n\n\nimport DashNavbar from '../components/DashNavbar'\nimport Card from '../components/Card'\nimport Modal from '../components/Modal'\nimport ContactForm from '../components/ContactForm'\nimport {Spinner} from '../components/Spinner'\n\nimport {listContacts} from '../features/contacts/ContactServices'\nimport UpdateContactForm from '../components/UpdateContactForm'\n// import UpdateModal from '../components/UpdateModal'\nimport DeleteContactForm from '../components/DeleteContactForm'\nimport SearchNotFound from '../components/SearchNotFound'\n\nfunction MainDashboard() {\n    const navigate = useNavigate()\n\n    useEffect(()=>{\n        if(!sessionStorage.getItem('user')){\n          navigate('/login')\n        //   setResponseData(null)\n        }\n      },[]);\n    \n   \n    let content=\"\"\n    let filteredData\n    let totalContacts\n    let color\n\n    let statusMap ={\n        'notCalled':'Not Called',\n        'calledAccepted':' Called/Accepted',\n        'calledDeclined':'Called/Declined',\n        'calledPostponed':'Called/Postponed',\n        'calledNotReachable':'Called/NotReachable',\n        'emailedAccepted':'Emailed/Accepted',\n        'emailedAwaitingResponse':'Emailed/Awaiting Response',\n        'emailedDeclined':'Emailed/Declined',\n        'blacklisted':'Blacklisted',\n    }\n    \n    const queryClient = useQueryClient()\n    const [showModal,setShowModal] = useState(false)\n    const [showUpdateModal,setShowUpdateModal] = useState(false)\n    const [showDeleteModal,setShowDeleteModal] = useState(false)\n    let [showSearchNotFound,setShowSearchNotFound] = useState(false)\n\n\n    const [showFilter,setShowFilter] = useState(false)\n    const [filterParam,setFilterParam]=useState('')\n    const [searchParam, setSearchParam] = useState('')\n    const [isChecked, setIsChecked] = useState(false)\n    const [currentUserID,setCurrentUserID] = useState(null)\n    const [currentHeight, setCurrentHeight] = useState('')\n    const [statusResponseData,setStatusResponseData] = useState({\n        notCalled:0,\n        calledAccepted:0,\n        calledDeclined:0,\n        calledPostponed:0,\n        calledNotReachable:0,\n        emailedAccepted:0,\n        emailedAwaitingResponse:0,\n        emailedDeclined:0,\n        blacklisted:0\n    })\n    \n    const handleCheckboxChange = () => {\n        setIsChecked(!isChecked)\n    }\n    const handleSearchChange = (e) => {\n        setSearchParam(e.target.value);\n    };\n\n    \n    //List Contacts\n    const listContactMutation= useQuery({\n        queryKey:['contacts'],\n        queryFn: ()=>{\n        // Object.keys(responseData).forEach(v => responseData[v] = 0)\n        return listContacts(sessionStorage.getItem('user'))\n        },\n    })     \n    // const show404 = ()=>{\n    //     setShowSearchNotFound(true)\n    // }\n    // useEffect(()=>{\n    //     show404()\n    //     setSearchParam(' ')      \n    // })\n    if(listContactMutation.isLoading){\n        <Spinner/>\n    }\n    else if(listContactMutation.isFetched ){\n        Object.keys(statusResponseData).forEach(v => statusResponseData[v] = 0)\n        totalContacts=0\n        content = listContactMutation.data.contacts\n        content.map((contact)=>{\n            statusResponseData[contact.status]+=1\n            totalContacts+=1;\n        })\n        !isChecked ?\n        filteredData = content.filter(item =>\n            item.name.toLowerCase().includes(searchParam.toLowerCase())\n        )\n        :\n        filteredData = content.filter(item =>\n            item.contactNumber.toString().includes(searchParam.toLowerCase())\n        )\n        if(showFilter){\n            filteredData = filteredData.filter(item=>\n                item.status===filterParam)\n        }\n        filteredData.reverse()\n\n       \n        \n        content= filteredData.map((contact)=>{\n            \n            return(\n                <tr className={`text-[#000000] text-lg rounded-md ${contact.status==='blacklisted'?'bg-[#fc6262] hover:border-[#DBDFEA] hover:border-x-4 duration-150':'bg-[] hover:border-[#8294C4] hover:border-x-4 duration-150'}`}>\n                \n                    <td className='p-3 font-base tracking-wide text-left whitespace-nowrap '>{contact.name}</td>\n                    <td className='p-3 font-base tracking-wide text-left whitespace-nowrap '>{contact.company}</td>\n                    <td className='p-3 font-base tracking-wide text-left whitespace-nowrap '>{contact.contactNumber}</td>\n                    <td className='p-3 font-base tracking-wide text-left whitespace-nowrap '><span className={`p-1.5 text-xs font-medium tracking-wide rounded-lg ${contact.status==='blacklisted'?'bg-[#DBDFEA] text-[#00000]':'bg-[#8EA7E9] text-white'}`}>{statusMap[contact.status]}</span></td>\n                    <td className='p-3 font-base tracking-wide text-left whitespace-nowrap '>\n                        <i className={`cursor-pointer fa-solid fa-pen-to-square mr-4 ${contact.status==='blacklisted'?'hover:text-white':'hover:text-[#8EA7E9]'}`} onClick={()=>{\n                            setCurrentUserID(contact._id)\n                            setShowUpdateModal(true)\n                        }}></i>\n                        <i className={`cursor-pointer fa-sharp fa-solid fa-trash ${contact.status==='blacklisted'?'hover:text-white':'hover:text-[#ff0000]'}`} onClick={()=>{\n                            setCurrentUserID(contact._id)\n                            setShowDeleteModal(true)\n                        }}\n                        ></i>\n                    </td>\n                </tr>\n            )\n        })\n    }   \n    return (\n        <>\n            <DashNavbar/>\n            <Fragment>\n                <div id = 'home-screen' className={`p-5 bg-opacity-60 min-h-screen`}>\n                    \n                    {/* Cards */}\n                    <div>\n                        <h1 className='font-semibold text-4xl text-center text-[#000000] my-[2%]'>Status of Contacts</h1>\n                        <div className='flex flex-wrap justify-center text-white'>\n                            <Card name='Total' color='#7286D3' count={totalContacts} onClick={()=>{ \n                                setShowFilter(false);\n                                setFilterParam('')\n                            }} />\n\n                            <Card name='Called/Accepted' color='#7286D3' count={statusResponseData['calledAccepted']} onClick={()=>{ \n                                setShowFilter(true);\n                                setFilterParam('calledAccepted')\n                            }} />\n                            \n                            <Card name='Called/Postponed' color='#7286D3' count={statusResponseData['calledPostponed']} onClick={()=>{ \n                                setShowFilter(true);\n                                setFilterParam('calledPostponed')\n                            }} />\n\n                            <Card name='Called/Declined' color='#7286D3' count={statusResponseData['calledDeclined']} onClick={()=>{ \n                                setShowFilter(true);\n                                setFilterParam('calledDeclined')\n                            }} />\n                            \n                            <Card name='Called/NotReachable' color='#7286D3' count={statusResponseData['calledNotReachable']} onClick={()=>{ \n                                setShowFilter(true);\n                                setFilterParam('calledNotReachable')\n                            }} />\n\n                            <Card name='Not Called' color='#7286D3' count={statusResponseData['notCalled']} onClick={()=>{ \n                                setShowFilter(true);\n                                setFilterParam('notCalled')\n                            }}/>\n\n                            <Card name='Emailed/Accepted' color='#7286D3' count={statusResponseData['emailedAccepted']} onClick={()=>{ \n                                setShowFilter(true);\n                                setFilterParam('emailedAccepted')\n                            }} />\n                            \n                            <Card name='Emailed/AwaitingResponse' color='#7286D3' count={statusResponseData['emailedAwaitingResponse']} onClick={()=>{ \n                                setShowFilter(true);\n                                setFilterParam('emailedAwaitingResponse')\n                            }} />\n                            <Card name='Emailed/Declined' color='#7286D3' count={statusResponseData['emailedDeclined']} onClick={()=>{ \n                                setShowFilter(true);\n                                setFilterParam('emailedDeclined')\n                            }} />\n                            \n                            <Card name='Blacklisted' color='#7286D3' count={statusResponseData['blacklisted']} onClick={()=>{ \n                                setShowFilter(true);\n                                setFilterParam('blacklisted')\n                            }} />\n                            \n                        </div>\n                    </div>\n                    \n                    {/* Search Bar */}\n                    <div className='flex justify-center my-[2%] '>\n                        {/* <button className='bg-color2 bg-opacity-90 text-white hover:scale-95 hover:bg-white hover:bg-opacity-10 focus:outine-none font-medium text-sm rounded-2xl px-5 py-2.5 text-center mr-5'\n                        onClick={()=>setShowModal(true)}>\n                            Add Contact\n                        </button> */}\n                        <form className=' ml-5 w-[90%] relative rounded-full overflow-hidden border-2 border-white'>\n                            <div className=' px-[3%] py-[0.5%] flex items-center justify-center bg-[#7286D3] bg-opacity-75'>\n                                <i class=\"fa-solid fa-magnifying-glass fa-beat px-2 ml-2 text-xl\"></i>\n                                <input type='search' placeholder='Type Here...' className='bg-color2 bg-opacity-5 placeholder-[#000000] w-full px-4 rounded-full appearance-none focus:outline-none border-none '\n                                onChange={handleSearchChange} value={searchParam} />\n                                <label className='themeSwitcherTwo shadow-card relative inline-flex cursor-pointer select-none items-center justify-center rounded-md  p-1 rounded-full bg-color2 bg-opacity-5'>\n                                <input\n                                type='checkbox'\n                                className='sr-only'\n                                checked={isChecked}\n                                onChange={handleCheckboxChange}\n                                />\n                                <span\n                                className={`flex items-center space-x-[6px] rounded py-2 px-[18px] text-sm font-medium ${\n                                    !isChecked ? ' rounded-md bg-white bg-opacity-60' : 'bg-[#]'\n                                }`}\n                                // False- BY Name\n                                >\n                                Name\n                                </span>\n                                <span\n                                className={`flex items-center space-x-[6px] rounded py-2 px-[18px] text-sm font-medium ${\n                                    isChecked ? 'rounded-md bg-white bg-opacity-60' : 'bg-[#]'\n                                }`}\n                                // True- BY Number\n\n                                >\n                                Number\n                                </span>\n                                </label>\n                            </div>\n                        </form>\n                    </div>\n                    \n                    {/* Table */}\n                    <div className='flex justify-between justify-items-center  justify-self-center items-baseline mx-[1%] my-[2%]'>\n                        <h1 className='text-3xl font-bold text-[#8294C4]'>Your Contacts</h1>\n                        <button onClick={()=>setShowModal(true)} title=\"Add Contact\"\n                            className=\" z-90 bg-[#8294C4] px-[2%] py-[1%] rounded-md drop-shadow-lg text-white text-thin hover:bg-white hover:text-[#000000] duration-150 cursor-pointer\">+\n\n                        </button>\n                    </div>\n                    <div className='overflow-auto rounded-lg shadow'>\n                        <table className='cursor-default w-full'>\n                            <thead className='bg-[#8EA7E9]'>\n                                <tr className='text-white text-lg font-semibold'>\n                                    <th className='p-3 tracking-wide text-left'>NAME</th>\n                                    <th className='p-3 tracking-wide text-left'>COMPANY</th>\n                                    <th className='p-3 tracking-wide text-left'>MOBILE</th>\n                                    <th className='p-3 tracking-wide text-left'>STATUS</th>\n                                    <th className='p-3 tracking-wide text-left'>ACTIONS</th>\n                                </tr>\n                            </thead>\n                            <tbody className='divide-y divide'>\n                                {/* <tr className='bg-[#FFF8DC]'>\n                                    <td className='p-3 text-sm tracking-wide text-left whitespace-nowrap '>Shreya</td>\n                                    <td className='p-3 text-sm tracking-wide text-left whitespace-nowrap '>SVCE</td>\n                                    <td className='p-3 text-sm tracking-wide text-left whitespace-nowrap '>7418732846</td>\n                                    <td className='p-3 text-sm tracking-wide text-left whitespace-nowrap '><span className='p-1.5 text-xs font-medium tracking-wide bg-white rounded-lg bg-opacity-30'>Not Reachable</span></td>\n                                    <td className='p-3 text-sm tracking-wide text-left whitespace-nowrap '><i className=\"fa-solid fa-pen-to-square mr-4 hover:text-[#D22B2B]\"></i><i className=\"fa-sharp fa-solid fa-trash hover:text-[#D22B2B]\"></i></td>\n                                </tr> */}\n                                {content}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                {/* Modal  */}\n                <Modal isVisible={showModal} onClose={()=>{setShowModal(false)}}>\n                    <ContactForm currentUserID = {currentUserID} onClose={()=>{setShowModal(false)}}/>\n                </Modal>\n                <Modal isVisible={showUpdateModal} onClose={()=>{setShowUpdateModal(false)}}>\n                    <UpdateContactForm currentUserID = {currentUserID} onClose={()=>{setShowUpdateModal(false)}}/>\n                </Modal>\n                <Modal isVisible={showDeleteModal} onClose={()=>{setShowDeleteModal(false)}}>\n                    <DeleteContactForm currentUserID = {currentUserID} onClose={()=>{setShowDeleteModal(false)}}/>\n                </Modal>\n                <Modal isVisible={showSearchNotFound} onClose={()=>{setShowSearchNotFound(false)}}>\n                    <SearchNotFound onClose={()=>{setShowSearchNotFound(false)}}/>\n                </Modal>\n                {/* <UpdateModal isVisible={showUpdateModal} onClose={()=>{setShowUpdateModal(false)}} currentUserID = {currentUserID}  /> */}\n            </Fragment>\n        </>\n    )\n}\nexport default MainDashboard\n\n\n","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/GlobalHR.js",["132","133","134","135","136"],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/DirectorsDashboard.js",["137","138","139","140","141","142","143","144"],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/AdminLoginForm.js",["145"],[],"import React, {useState, useContext} from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport{useMutation, useQueryClient} from '@tanstack/react-query'\nimport {currentUserContext} from '../App'\n\n\nimport {login} from \"../features/users/UserServices\"\n\nfunction AdminForm() {\n    const [formData, setFormData] = useState({email:\"\", password:\"\",role:\"Admin\"})\n    const {currentUser,setCurrentUser } = useContext(currentUserContext);\n\n    const queryClient = useQueryClient()\n    const navigate = useNavigate()\n\n    const loginMutation = useMutation({\n        mutationFn: login,\n        onSuccess:(data)=>{\n            queryClient.invalidateQueries([\"user\"], { exact: true })\n            setCurrentUser(sessionStorage.getItem('user'))\n            sessionStorage.setItem('email',data.email)\n            sessionStorage.setItem('role',data.role)\n            sessionStorage.setItem('incharge',data.incharge)\n\n        //   console.log(data)\n            navigate('/ddashboard')\n        }\n      })\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((prevFormData) => ({ ...prevFormData, [name]: value }));\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(formData)\n        loginMutation.mutate({\n            email:formData.email,\n            password:formData.password,\n            role:formData.role\n        })\n    }\n    return (\n        <>\n            <div className='flex justify-center items-center h-screen bg-[#8EA7E9]'>\n                <form className='w-96 p-6 shadow-lg bg-white rounded-md text-[#7286D3]'>\n                    <h2 className='text-2xl  block text-center font-semibold'><i className=' text-2xl fa-solid fa-user px-2'></i> Admin Login</h2>\n                    <hr className='mt-3'/>\n                    <div className='mt-3'>\n                        <label htmlFor='username' className=' block text-base mb-2 font-base'>Email</label>\n                        <input type='text' id ='email' \n                        name='email'\n                        className='border border-[#7286D3] w-full text-base px-2 py-1 focus:outline-none focus:ring-0' \n                        placeholder='Enter Email...'\n                        value={formData.email} \n                        onChange={handleChange}/>\n                    </div>\n                    <div className='mt-3'>\n                        <label htmlFor='password' className='block text-base mb-2 font-base'>Password</label>\n                        <input type='password' id ='password' \n                        name='password'\n                        className='border border-[#7286D3] w-full text-base px-2 py-1 focus:outline-none focus:ring-0' \n                        placeholder='Enter Password...'\n                        value={formData.password} \n                        onChange={handleChange}/>\n                    </div>\n                    <div class=\"mt-3 flex justify-between items-center\">\n                        <div>\n                            <label><a href='/login' className='text-[#7286D3] font-semibold'>Common Login</a></label>\n                        </div>\n                    </div>\n                    <div className='mt-5'>\n                        <button type='submit' className=' cursor-pointer border-2 border-[#a6c1ee] bg-[#7286D3] text-white py-1 w-full rounded font-semibold hover:opacity-75 hover:z-90 duration-150' onClick={handleSubmit}>Submit</button>\n                    </div>\n                </form>\n            </div>\n        </>\n    )\n}\n\nexport default AdminForm","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/LoginForm.js",["146"],[],"import React, {useState, useContext } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport{useMutation, useQueryClient} from '@tanstack/react-query'\nimport {toast} from 'react-toastify'\n\nimport {currentUserContext} from '../App'\n\nimport {login} from \"../features/users/UserServices\"\n\nfunction Form() {\n    const [formData, setFormData] = useState({email:\"\", password:\"\", role:\"\"})\n    const {currentUser,setCurrentUser } = useContext(currentUserContext);\n\n    const queryClient = useQueryClient()\n    const navigate = useNavigate()\n\n    const loginMutation = useMutation({\n        mutationFn: login,\n        onSuccess:(data)=>{\n            queryClient.invalidateQueries([\"user\"], { exact: true })\n            setCurrentUser(sessionStorage.getItem('user'))\n            \n\n            sessionStorage.setItem('email',data.email)\n            sessionStorage.setItem('role',data.role)\n            sessionStorage.setItem('incharge',data.incharge)\n\n            if(data.role ==='Member'){\n                navigate('/dashboard')\n            }\n            else{\n                navigate('/ddashboard')\n            }\n        },\n        onError:(message)=>{\n            console.log(message)\n            toast.error(message)\n        }\n        \n    })\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((prevFormData) => ({ ...prevFormData, [name]: value }));\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(formData)\n        loginMutation.mutate({\n            email:formData.email,\n            password:formData.password,\n            role:formData.role\n        })\n        if(loginMutation.error){\n            toast.error('UC')\n        }\n    }\n    return (\n        <>\n            <div className='flex justify-center items-center h-screen bg-[#8EA7E9]'>\n                <form className='w-96 p-6 shadow-lg bg-white rounded-md text-[#7286D3]'>\n                    <h2 className='text-3xl block text-center font-semibold '><i className=' text-2xl fa-solid fa-user px-2'></i>Login</h2>\n                    <hr className='mt-3'/>\n                    <div className='mt-3'>\n                        <label htmlFor='email' className='  block font-semibold mb-2 text-base'>Email</label>\n                        <input type='email' id ='email' \n                        name =\"email\"\n                        className='border border-[#7286D3] w-full text-base px-2 py-1 focus:outline-none focus:ring-0' \n                        placeholder='Enter Email...'\n                        value={formData.email} \n                        onChange={handleChange}/>\n                    </div>\n                    <div className='mt-3'>\n                        <label htmlFor='password' className=' font-semibold block text-base mb-2'>Password</label>\n                        <input type='password' id ='password' \n                        name =\"password\"\n                        className='border border-[#7286D3] w-full text-base px-2 py-1 focus:outline-none focus:ring-0' \n                        placeholder='Enter Password...'\n                        value={formData.password} \n                        onChange={handleChange}/>\n                    </div>\n                    <div className='mt-3'>\n                        <label htmlFor='role' className=' font-semibold block text-base mb-2'>Role:</label>\n                        <select name='role' id='role' \n                        className='border border-[#7286D3] w-full text-base px-2 py-1 focus:outline-none focus:ring-0' \n                        value={formData.role} \n                        onChange={handleChange}>\n                            <option value='' disabled selected hidden>Choose Role...</option>\n                            <option value='Director'>Executive Director</option>\n                            <option value='Member'>Member</option>\n                        </select>\n                    </div>\n                    <div class=\"mt-3 flex justify-between items-center\">\n                        <div>\n                            <label><a href='/admin' className='text-color3 font-semibold'>Admin Login</a></label>\n                        </div>\n                    </div>\n                    <div className='mt-5'>\n                        <button type='submit' \n                        className='cursor-pointer border-2 bg-[#7286D3] text-white py-1 w-full rounded font-semibold hover:opacity-75  hover:z-90 duration-150 ' \n                        onClick={handleSubmit}\n                        disabled={!formData.email || !formData.password || !formData.role}>\n                        Submit</button>\n                    </div>\n                </form>\n            </div> \n        </> \n    )\n}\n\nexport default Form","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/FileUploadForm.js",[],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/Spinner.jsx",[],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/HomeNavbar.js",[],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/DashNavbar.js",["147","148","149"],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/Card.js",[],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/Modal.js",[],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/ContactForm.js",["150","151"],[],"import React, {useState } from 'react'\nimport{useQuery, useMutation, useQueryClient} from '@tanstack/react-query'\n\nimport {addContact} from '../features/contacts/ContactServices'\n\nfunction ContactForm(currentUserID,onClose) {\n    const queryClient = useQueryClient()\n    \n    const [formData,setFormData]= useState({\n        name:'',\n        company:'',\n        contactNumber:'',\n        email:'',\n        status:'',\n        interviewMode:'',\n        HRCount:'',\n        transport:'',\n        address:'',\n        internship:'',\n        // department:'',\n        comments:''\n    })\n    const initialState ={}\n    \n    \n    // Add ContactMutation\n    const addContactMutation = useMutation({\n        mutationFn: ()=>{\n          return addContact(formData,sessionStorage.getItem('user'))\n        },\n        onSuccess:(data)=>{\n        //   Object.keys(responseData).forEach(v => responseData[v] = 0)\n          queryClient.invalidateQueries(['contacts'])\n    \n        }\n    })\n    \n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData((prevFormData) => ({ ...prevFormData, [name]: value }));\n      };\n     \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(formData)\n        addContactMutation.mutate()\n        \n    }\n      \n  return (\n   <>\n        <div className=''>\n            <div className='container mx-auto'>\n                <div className='flex flex-col py-12 px-12'>\n                    <h3 className='text-xl mb-4 text-center text-[#00000]'>Add Contact</h3>\n                    <form>\n                        <div className='grid grid-cols-2 gap-2'>\n                            <input className='placeholder-color1 rounded-md border py-1 px-2 border-[#A9A9A9] rounded' placeholder='Name'\n                            type='text' name='name' value={formData.name} onChange={handleChange}/>\n                            <input className='placeholder-color1 rounded-md border py-1 px-2 border-[#A9A9A9] rounded' placeholder='Contact Number'\n                            type='text' name='contactNumber' value={formData.number} onChange={handleChange}/>\n                        </div>\n                        <div className='mt-2'>\n                            <input className='placeholder-color1 rounded-md border py-1 px-2 border-[#A9A9A9] w-full rounded' placeholder='Company Name'\n                            type='text' name='company' value={formData.company} onChange={handleChange}/>\n                        </div>\n                        <div className='mt-2'>\n                            <input className='placeholder-color1 rounded-md border py-1 px-2 border-[#A9A9A9] w-full rounded' placeholder='Email'\n                            type='email' name='email' value={formData.email} onChange={handleChange}/>\n                        </div>\n                        <div className='grid grid-cols-2 gap-2 mt-2'>\n                            <select name=\"status\" id=\"status\" className=' border py-1 px-2 border-[#A9A9A9] rounded'\n                            value={formData.status} onChange={handleChange}\n                            required>\n                                <option className='text-color1' value='' disabled selected hidden>Choose Contact Status...</option>\n                                <option value=\"notCalled\">Not Called</option>\n                                <option value=\"calledAccepted\">Called/Accepted</option>\n                                <option value=\"calledDeclined\">Called/Declined</option>\n                                <option value=\"calledNotReachable\">Called/NotReachable</option>\n                                <option value=\"emailedAccepted\">Emailed/Accepted</option>\n                                <option value=\"emailedAwaitingResponse\">Emailed/AwaitingResponse</option>\n                                <option value=\"emailedDeclined\">Emailed/Declined</option>\n                            </select>\n                            <select name=\"interviewMode\" id=\"interviewMode\" className='border py-1 px-2 border-[#A9A9A9] rounded'\n                            value={formData.interviewMode} onChange={handleChange}\n                            required>\n                                <option className='text-color1' value='' disabled selected hidden>Choose Interview Mode...</option>\n                                <option value=\"online\">Online</option>\n                                <option value=\"offline\">Offline</option>\n                                <option value=\"onlineOffline\">Online/Offline</option>\n                            </select>\n                        </div>\n                        <div className='flex mt-2'>\n                            <input  id=\"HRCount\" name=\"HRCount\" type=\"number\" placeholder='HR Count'\n                            className=' placeholder-color1 border py-1 px-2 border-[#A9A9A9] rounded mr-2 w-1/4'\n                            value={formData.HRCount} \n                            onChange={handleChange}\n                            min={0}\n                            required/>\n                            <select name=\"transport\" id=\"transport\" \n                            className='border py-1 px-2 border-[#A9A9A9] rounded mr-2'\n                            value={formData.transport} \n                            onChange={handleChange}\n                            required>\n                            <option className='text-color1' value='' disabled selected hidden>Transportation Mode...</option>\n                            <option value=\"own\">Own</option>\n                            <option value=\"Cab\">Cab</option>\n                            </select>\n                            <select name=\"internship\" id=\"internship\" \n                            className='border py-1 px-2 border-[#A9A9A9] rounded w-2/5'\n                            value={formData.internship} \n                            onChange={handleChange}\n                            required>\n                                <option className='text-color1' value='' disabled selected hidden>Internship ...</option>\n                                <option value=\"yes\">Yes</option>\n                                <option value=\"no\">No</option>\n                            </select>\n                        </div>\n                        <div className='mt-2'>\n                            <input className='placeholder-color1 rounded-md border py-2 px-2 border-[#A9A9A9] w-full rounded' placeholder='Address'\n                            value={formData.address} onChange={handleChange} name='address' type='textbox'/>\n                        </div>\n                        <div className='mt-2'>\n                            <input className='placeholder-color1 rounded-md border py-2 px-2 border-[#A9A9A9] w-full rounded' placeholder='Comments'\n                            value={formData.comments} onChange={handleChange} name='comments' type='textbox'/>\n                        </div>\n                    </form>\n                    <div className='flex items-center justify-center mt-5'>\n                        <button className='bg-[#8EA7E9] text-[#000000]  focus:outine-none font-medium text-sm rounded-lg px-5 py-2.5 text-center w-full mx-2 hover:scale-95 duration-150'\n                        type='submit' id ='submit' onClick={handleSubmit}>\n                            Save Contact\n                        </button>\n                        {/* <button className='bg-[#A9A9A9] hover:scale-95 focus:outine-none font-medium text-sm rounded-lg px-5 py-2.5 text-center w-full mx-2'>\n                            Update Contact\n                        </button> */}\n                    </div>\n                </div>\n            </div>\n        </div>\n   </>\n  )\n}\n\nexport default ContactForm\n\n","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/UpdateContactForm.js",["152","153","154","155","156","157"],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/SearchNotFound.js",[],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/components/DeleteContactForm.js",["158"],[],"import React, {useState } from 'react'\nimport{useQuery, useMutation, useQueryClient} from '@tanstack/react-query'\n\nimport {deleteContact, getContact} from '../features/contacts/ContactServices' \nimport { Spinner } from './Spinner'\n\nfunction DeleteContactForm(currentUserID,onClose) {\n    const [userId,setUserId] = useState(currentUserID.currentUserID)\n    const queryClient = useQueryClient()\n    const [formData,setFormData]= useState({\n        name:'',\n        company:'',\n    })\n\n    // Delete Contacts\n    const deleteContactMutation = useMutation({\n        mutationFn:()=>{\n            return deleteContact(currentUserID.currentUserID,sessionStorage.getItem('user'))\n        },\n        onSuccess: () =>{\n            // Object.keys(responseData).forEach(v => responseData[v] = 0)\n            queryClient.invalidateQueries([\"contacts\"])\n            queryClient.invalidateQueries([\"teamcontacts\"])\n            queryClient.invalidateQueries([\"globalContacts\"])\n\n\n        } \n    })\n    // Get Contact\n    const getContactQuery = useQuery({\n        queryKey:['contact',currentUserID],\n        queryFn:()=>{\n            return getContact(currentUserID.currentUserID,sessionStorage.getItem('user'))\n        },\n        // enabled:false\n        enabled: !!userId,\n        // refetchOnMount:false,\n        // refetchInterval: 2000,\n    })\n    getContactQuery.remove()\n    // if(!getContactQuery.isFetched || getContactQuery.isError)\n    //     // getContactQuery.refetch()\n    // {}\n    if(getContactQuery.isLoading || getContactQuery.isFetching){\n        // return <Spinner/>\n        console.log(\"Loading\")\n    }\n    else{\n        console.log(userId)\n        setUserId(null)    \n        console.log(getContactQuery.data)\n        const currentState = {\n            name:getContactQuery.data.name,\n            company:getContactQuery.data.company,\n        }\n        setFormData(currentState)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        deleteContactMutation.mutate() \n    }\n\n    return (\n        <>\n           <div className=''>\n            <div className='container mx-auto'>\n                <div className='flex flex-col py-10 px-12'>\n                    <h3 className=' my-[1%] text-center font-semibold text-[#000000] text-2xl'>Delete Contact</h3>\n                    <div className=' px-[3%] py-[2%] text-[#000000] font-base text-xl'>\n                        Delete {formData.name} from {formData.company}?\n                    </div>\n                    <div className='flex items-center justify-center mt-5 text-white'>\n                        <button className='px-[2%] cursor-pointer bg-[#D22B2B] focus:outine-none font-medium text-sm rounded-lg px-5 py-2.5 text-center w-full mx-2 hover:scale-95 duration-150'\n                        type='submit' id='cancel' onClick={()=>{}}>\n                            Cancel\n                        </button>\n                        <button className=' px-[2%] cursor-pointer bg-[#8EA7E9] focus:outine-none font-medium text-sm rounded-lg px-5 py-2.5 text-center w-full mx-2 hover:scale-95 duration-150'\n                        type='submit' id='submit' onClick={handleSubmit}>\n                            Delete Contact\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n\n    )\n}\n\nexport default DeleteContactForm","/Users/mac/Desktop/FORESE/DB_Software/frontend/src/features/contacts/ContactServices.js",[],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/features/users/UserServices.js",[],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/FAQ.js",["159"],[],"/Users/mac/Desktop/FORESE/DB_Software/frontend/src/screens/HRPitch.js",["160"],[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":11,"column":10,"nodeType":"165","messageId":"166","endLine":11,"endColumn":17},{"ruleId":"167","severity":1,"message":"168","line":26,"column":9,"nodeType":"169","endLine":26,"endColumn":11,"suggestions":"170"},{"ruleId":"163","severity":1,"message":"171","line":32,"column":9,"nodeType":"165","messageId":"166","endLine":32,"endColumn":14},{"ruleId":"163","severity":1,"message":"172","line":46,"column":11,"nodeType":"165","messageId":"166","endLine":46,"endColumn":22},{"ruleId":"163","severity":1,"message":"173","line":58,"column":12,"nodeType":"165","messageId":"166","endLine":58,"endColumn":25},{"ruleId":"163","severity":1,"message":"174","line":58,"column":27,"nodeType":"165","messageId":"166","endLine":58,"endColumn":43},{"ruleId":"163","severity":1,"message":"175","line":59,"column":31,"nodeType":"165","messageId":"166","endLine":59,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":101,"column":30,"nodeType":"178","messageId":"179","endLine":101,"endColumn":32},{"ruleId":"163","severity":1,"message":"180","line":2,"column":18,"nodeType":"165","messageId":"166","endLine":2,"endColumn":32},{"ruleId":"163","severity":1,"message":"181","line":30,"column":22,"nodeType":"165","messageId":"166","endLine":30,"endColumn":33},{"ruleId":"163","severity":1,"message":"175","line":36,"column":31,"nodeType":"165","messageId":"166","endLine":36,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":74,"column":43,"nodeType":"178","messageId":"179","endLine":74,"endColumn":45},{"ruleId":"176","severity":1,"message":"177","line":86,"column":30,"nodeType":"178","messageId":"179","endLine":86,"endColumn":32},{"ruleId":"163","severity":1,"message":"182","line":13,"column":10,"nodeType":"165","messageId":"166","endLine":13,"endColumn":19},{"ruleId":"163","severity":1,"message":"183","line":17,"column":8,"nodeType":"165","messageId":"166","endLine":17,"endColumn":22},{"ruleId":"167","severity":1,"message":"168","line":27,"column":9,"nodeType":"169","endLine":27,"endColumn":11,"suggestions":"184"},{"ruleId":"163","severity":1,"message":"181","line":44,"column":22,"nodeType":"165","messageId":"166","endLine":44,"endColumn":33},{"ruleId":"163","severity":1,"message":"172","line":45,"column":11,"nodeType":"165","messageId":"166","endLine":45,"endColumn":22},{"ruleId":"163","severity":1,"message":"175","line":57,"column":31,"nodeType":"165","messageId":"166","endLine":57,"endColumn":52},{"ruleId":"176","severity":1,"message":"177","line":97,"column":43,"nodeType":"178","messageId":"179","endLine":97,"endColumn":45},{"ruleId":"176","severity":1,"message":"177","line":111,"column":30,"nodeType":"178","messageId":"179","endLine":111,"endColumn":32},{"ruleId":"163","severity":1,"message":"185","line":11,"column":12,"nodeType":"165","messageId":"166","endLine":11,"endColumn":23},{"ruleId":"163","severity":1,"message":"185","line":12,"column":12,"nodeType":"165","messageId":"166","endLine":12,"endColumn":23},{"ruleId":"163","severity":1,"message":"185","line":13,"column":12,"nodeType":"165","messageId":"166","endLine":13,"endColumn":23},{"ruleId":"163","severity":1,"message":"186","line":14,"column":28,"nodeType":"165","messageId":"166","endLine":14,"endColumn":46},{"ruleId":"187","severity":1,"message":"188","line":36,"column":21,"nodeType":"189","endLine":37,"endColumn":36},{"ruleId":"163","severity":1,"message":"190","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"191","line":23,"column":11,"nodeType":"165","messageId":"166","endLine":23,"endColumn":23},{"ruleId":"163","severity":1,"message":"164","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":17},{"ruleId":"163","severity":1,"message":"192","line":11,"column":12,"nodeType":"165","messageId":"166","endLine":11,"endColumn":21},{"ruleId":"163","severity":1,"message":"193","line":11,"column":22,"nodeType":"165","messageId":"166","endLine":11,"endColumn":36},{"ruleId":"163","severity":1,"message":"194","line":31,"column":9,"nodeType":"165","messageId":"166","endLine":31,"endColumn":15},{"ruleId":"163","severity":1,"message":"195","line":33,"column":11,"nodeType":"165","messageId":"166","endLine":33,"endColumn":28},{"ruleId":"176","severity":1,"message":"177","line":57,"column":47,"nodeType":"178","messageId":"179","endLine":57,"endColumn":49},{"ruleId":"163","severity":1,"message":"164","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":17},{"ruleId":"163","severity":1,"message":"196","line":6,"column":20,"nodeType":"165","messageId":"166","endLine":6,"endColumn":34},{"ruleId":"163","severity":1,"message":"196","line":6,"column":20,"nodeType":"165","messageId":"166","endLine":6,"endColumn":34},"no-new-object",["197"],"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'color' is defined but never used.","'queryClient' is assigned a value but never used.","'currentHeight' is assigned a value but never used.","'setCurrentHeight' is assigned a value but never used.","'setStatusResponseData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useQueryClient' is defined but never used.","'setUsersMap' is assigned a value but never used.","'getMyTeam' is defined but never used.","'SearchNotFound' is defined but never used.",["199"],"'currentUser' is assigned a value but never used.","'setCurrentUserRole' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useQuery' is defined but never used.","'initialState' is assigned a value but never used.","'teamSplit' is assigned a value but never used.","'setMyTeamSplit' is assigned a value but never used.","'myteam' is defined but never used.","'getDirectorsQuery' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","no-object-constructor",{"desc":"200","fix":"201"},{"desc":"200","fix":"202"},"Update the dependencies array to be: [navigate]",{"range":"203","text":"204"},{"range":"205","text":"204"},[916,918],"[navigate]",[937,939]]